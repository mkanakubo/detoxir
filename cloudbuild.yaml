steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:${COMMIT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:latest',
      './backend'
    ]

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', '--all-tags',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE}',
      '--image', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE}:${COMMIT_SHA}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '3001',
      '--memory', '512Mi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--timeout', '300',
      '--set-env-vars', 'NODE_ENV=production,PORT=3001',
      '--set-cloudsql-instances', '${PROJECT_ID}:${_REGION}:${_DB_INSTANCE}',
      '--service-account', '${_SERVICE_ACCOUNT}'
    ]

substitutions:
  _REGION: 'asia-northeast1'
  _REPOSITORY: 'detoxir'
  _IMAGE: 'detoxir-backend'
  _SERVICE: 'detoxir-backend'
  _DB_INSTANCE: 'detoxir-postgres-prod'
  _SERVICE_ACCOUNT: 'detoxir-cloud-run@${PROJECT_ID}.iam.gserviceaccount.com'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
