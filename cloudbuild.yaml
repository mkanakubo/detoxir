steps:
  # Build the Docker image for Atlas API
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api:$BUILD_ID',
      '-t', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api:latest',
      '.'
    ]

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', '--all-tags',
      'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'atlas-api',
      '--image', 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api:$BUILD_ID',
      '--region', 'asia-northeast1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--timeout', '300',
      '--cpu-throttling',
      '--set-env-vars', 'RAILS_ENV=production,RAILS_SERVE_STATIC_FILES=true,RAILS_LOG_TO_STDOUT=true',
      '--set-env-vars', 'SECRET_KEY_BASE=production_secret_key_base_for_cloud_run_deployment_2025',
      '--set-env-vars', 'DATABASE_SOCKET=/cloudsql/${PROJECT_ID}:asia-northeast1:atlas-db',
      '--set-env-vars', 'DATABASE_NAME=atlas_production,DATABASE_NAME_CACHE=atlas_production_cache',
      '--set-env-vars', 'DATABASE_NAME_QUEUE=atlas_production_queue,DATABASE_NAME_CABLE=atlas_production_cable',
      '--set-env-vars', 'DATABASE_USERNAME=atlas_user,DATABASE_PASSWORD=atlas_password_123',
      '--add-cloudsql-instances', '${PROJECT_ID}:asia-northeast1:atlas-db'
    ]

# Images to be built and pushed
images:
  - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api:$BUILD_ID'
  - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/atlas-repo/atlas-api:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s'
